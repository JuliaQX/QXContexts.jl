.before_script:
  before_script:
    - apt update
    - apt install -y build-essential
    - which gcc || echo "gcc not found"
.script:
  script:
    - |
      julia --project=@. -e '
        using Pkg
        Pkg.build()
        Pkg.test(coverage=true)'
    - julia --startup-file=no --project=@. --trace-compile=example_precompile.jl bin/rundsl.jl -d examples/ghz/ghz_5.tl -p examples/ghz/ghz_5.yml -i examples/ghz/ghz_5.jld -o out.jld
    - |
      julia --startup-file=no --project=@. -e '
        using Pkg
        Pkg.add("PackageCompiler")
        using PackageCompiler;
        PackageCompiler.create_sysimage([:MPI, :TensorOperations, :QXRun],
            precompile_statements_file="example_precompile.jl",
            sysimage_path="qxrun_sysimage.so");'
.coverage:
  coverage: /Test coverage (\d+\.\d+%)/
  after_script:
    - |
      julia -e '
        using Pkg
        Pkg.add("Coverage")
        using Coverage
        c, t = get_summary(process_folder())
        using Printf
        @printf "Test coverage %.2f%%\n" 100c / t'
.artifacts:
  artifacts:
    name: qxrun_sysimage.so
    paths:
      - qxrun_sysimage.so
Julia 1.6:
  image: julia:1.6
  tags:
    - docker
  extends:
    - .before_script
    - .script
    - .coverage
    - .artifacts
